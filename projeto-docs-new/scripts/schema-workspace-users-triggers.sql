-- ============================================================================
-- TRIGGERS: HU_User ‚Üí HU_Workspace_User | HU_Workspace ‚Üí HU_Workspace_User
-- ============================================================================
-- Vers√£o: 3.0
-- Data: 2025-01-15
-- Descri√ß√£o: Triggers para cria√ß√£o autom√°tica de acesso a workspaces
--            1. Acesso autom√°tico ao workspace pessoal (OWNER)
--            2. Acesso autom√°tico ao workspace organizacional (MEMBER)
-- Mudan√ßas v3.0: Nomenclatura camelCase com aspas duplas
-- ============================================================================

-- ============================================================================
-- DROP FUN√á√ïES E TRIGGERS ANTIGOS (se existirem)
-- ============================================================================

DROP TRIGGER IF EXISTS "trgCreateWorkspaceAccessForUser" ON "HU_User";
DROP TRIGGER IF EXISTS "trgCreateWorkspaceAccessForWorkspace" ON "HU_Workspace";
DROP FUNCTION IF EXISTS createWorkspaceAccessForUser();
DROP FUNCTION IF EXISTS createWorkspaceAccessForWorkspace();

-- ============================================================================
-- FUN√á√ÉO: Criar Acesso Autom√°tico para Novo Usu√°rio
-- ============================================================================

CREATE OR REPLACE FUNCTION createWorkspaceAccessForUser()
RETURNS TRIGGER AS $$
DECLARE
  v_org_id UUID;
  v_personal_workspace_id UUID;
  v_organizational_workspace_id UUID;
BEGIN
  -- Obter orgId do usu√°rio
  v_org_id := NEW."orgId";
  
  -- Se n√£o tem orgId, buscar da primeira organiza√ß√£o ativa (fallback)
  IF v_org_id IS NULL THEN
    SELECT id INTO v_org_id 
    FROM "HU_Organization" 
    WHERE "isActive" = TRUE 
    ORDER BY "createdAt" ASC 
    LIMIT 1;
  END IF;
  
  -- Se encontrou uma organiza√ß√£o, criar acessos autom√°ticos
  IF v_org_id IS NOT NULL THEN
    
    -- 1. Buscar workspace pessoal do usu√°rio
    SELECT id INTO v_personal_workspace_id
    FROM "HU_Workspace"
    WHERE "orgId" = v_org_id
      AND "type" = 'PERSONAL'::"workspaceTypeEnum"
      AND "name" LIKE 'My Workspace - %'
      AND "isActive" = TRUE
    ORDER BY "createdAt" DESC
    LIMIT 1;
    
    -- 2. Buscar workspace organizacional
    SELECT id INTO v_organizational_workspace_id
    FROM "HU_Workspace"
    WHERE "orgId" = v_org_id
      AND "type" = 'ORGANIZATIONAL'::"workspaceTypeEnum"
      AND "isActive" = TRUE
    ORDER BY "createdAt" ASC
    LIMIT 1;
    
    -- 3. Criar acesso ao workspace pessoal
    IF v_personal_workspace_id IS NOT NULL THEN
      INSERT INTO "HU_Workspace_User" (
        "wkspId",
        "userId",
        "isActive"
      ) VALUES (
        v_personal_workspace_id,
        NEW.id,
        TRUE
      );
      
      RAISE NOTICE 'Acesso criado para workspace pessoal %', v_personal_workspace_id;
    END IF;
    
    -- 4. Criar acesso ao workspace organizacional
    IF v_organizational_workspace_id IS NOT NULL THEN
      INSERT INTO "HU_Workspace_User" (
        "wkspId",
        "userId",
        "isActive"
      ) VALUES (
        v_organizational_workspace_id,
        NEW.id,
        TRUE
      );
      
      RAISE NOTICE 'Acesso criado para workspace organizacional %', v_organizational_workspace_id;
    END IF;
    
  ELSE
    -- Log warning se n√£o encontrou organiza√ß√£o
    RAISE WARNING 'Nenhuma organiza√ß√£o encontrada para criar acessos autom√°ticos do usu√°rio %', NEW.id;
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ============================================================================
-- TRIGGER: Criar Acesso Ap√≥s Insert em User
-- ============================================================================

CREATE TRIGGER "trgCreateWorkspaceAccessForUser"
  AFTER INSERT ON "HU_User"
  FOR EACH ROW
  EXECUTE FUNCTION createWorkspaceAccessForUser();

-- ============================================================================
-- FUN√á√ÉO: Criar Acesso Autom√°tico para Novo Workspace (se for ORGANIZATIONAL)
-- ============================================================================

CREATE OR REPLACE FUNCTION createWorkspaceAccessForWorkspace()
RETURNS TRIGGER AS $$
DECLARE
  user_record RECORD;
BEGIN
  -- S√≥ criar acessos autom√°ticos para workspaces ORGANIZATIONAL
  IF NEW."type" = 'ORGANIZATIONAL'::"workspaceTypeEnum" THEN
    
    -- Dar acesso autom√°tico a todos os usu√°rios da organiza√ß√£o
    FOR user_record IN 
      SELECT id, "orgId"
      FROM "HU_User"
      WHERE "orgId" = NEW."orgId"
        AND "isActive" = TRUE  -- Assumindo que existe coluna isActive em User
    LOOP
      -- Inserir acesso
      INSERT INTO "HU_Workspace_User" (
        "wkspId",
        "userId",
        "isActive"
      ) VALUES (
        NEW.id,
        user_record.id,
        TRUE
      );
    END LOOP;
    
    RAISE NOTICE 'Acessos autom√°ticos criados para workspace organizacional %', NEW.id;
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ============================================================================
-- TRIGGER: Criar Acesso Ap√≥s Insert em HU_Workspace
-- ============================================================================

CREATE TRIGGER "trgCreateWorkspaceAccessForWorkspace"
  AFTER INSERT ON "HU_Workspace"
  FOR EACH ROW
  EXECUTE FUNCTION createWorkspaceAccessForWorkspace();

-- ============================================================================
-- COMENT√ÅRIOS
-- ============================================================================

COMMENT ON FUNCTION createWorkspaceAccessForUser() IS 
  'Fun√ß√£o trigger que cria acesso autom√°tico a workspaces quando um novo usu√°rio √© inserido (v3.0 - camelCase)';

COMMENT ON TRIGGER "trgCreateWorkspaceAccessForUser" ON "HU_User" IS 
  'Trigger que executa ap√≥s INSERT em HU_User para criar acessos autom√°ticos a workspaces (v3.0 - camelCase)';

COMMENT ON FUNCTION createWorkspaceAccessForWorkspace() IS 
  'Fun√ß√£o trigger que cria acesso autom√°tico a todos os usu√°rios quando um workspace organizacional √© criado (v3.0 - camelCase)';

COMMENT ON TRIGGER "trgCreateWorkspaceAccessForWorkspace" ON "HU_Workspace" IS 
  'Trigger que executa ap√≥s INSERT em HU_Workspace para criar acessos autom√°ticos em workspaces organizacionais (v3.0 - camelCase)';

-- ============================================================================
-- RESUMO FINAL v3.0
-- ============================================================================

-- ‚úÖ ATIVO: Trigger HU_User ‚Üí HU_Workspace_User (Acesso Autom√°tico)
--    - Fun√ß√£o: createWorkspaceAccessForUser()
--    - Trigger: "trgCreateWorkspaceAccessForUser"
--    - Tabela: "HU_User" ‚Üí "HU_Workspace_User"
--    - Acessos: OWNER (workspace pessoal) + MEMBER (workspace organizacional)

-- ‚úÖ ATIVO: Trigger HU_Workspace ‚Üí WorkspaceUsers (Acesso Autom√°tico)
--    - Fun√ß√£o: createWorkspaceAccessForWorkspace()
--    - Trigger: "trgCreateWorkspaceAccessForWorkspace"
--    - Tabela: "HU_Workspace" ‚Üí "HU_Workspace_User"
--    - Acesso: MEMBER autom√°tico para todos os usu√°rios da org (apenas workspaces ORGANIZATIONAL)

-- üìã Nomenclatura v3.0 (TUDO camelCase + Prefixo HU_):
--    - Tabelas Humana: "HU_Organization", "HU_Workspace" (HU_ + PascalCase com aspas)
--    - Tabela Junction: "HU_Workspace_User" (PascalCase com aspas)
--    - Tabela SDK: "HU_User" (PascalCase com aspas)
--    - Colunas: "wkspId", "userId", "isActive", "joinedAt", "updatedAt" (camelCase com aspas)
--    - Fun√ß√µes: createWorkspaceAccessForUser, createWorkspaceAccessForWorkspace (camelCase sem aspas)
--    - Triggers: "trgCreateWorkspaceAccessForUser", "trgCreateWorkspaceAccessForWorkspace" (camelCase com aspas)
--    - ENUMs: "workspaceTypeEnum" (PERSONAL, ORGANIZATIONAL, FUNCTIONAL)

-- üîÑ DROPs inclu√≠dos:
--    - Todas as vers√µes antigas s√£o removidas automaticamente

-- ============================================================================
-- NOTAS DE IMPLEMENTA√á√ÉO
-- ============================================================================

-- ORDEM DE EXECU√á√ÉO DOS TRIGGERS:
-- 1. User INSERT ‚Üí createPersonalWorkspaceForUser() ‚Üí Cria workspace PERSONAL
-- 2. User INSERT ‚Üí createWorkspaceAccessForUser() ‚Üí Cria acessos autom√°ticos
-- 3. HU_Workspace INSERT ‚Üí createWorkspaceAccessForWorkspace() ‚Üí Cria acessos para workspaces ORGANIZATIONAL

-- WORKSPACES FUNCIONAIS:
-- - Workspaces do tipo FUNCTIONAL n√£o recebem acesso autom√°tico
-- - Acesso deve ser concedido manualmente via aplica√ß√£o
-- - Permite controle granular de permiss√µes

-- PERMISS√ïES:
-- - OWNER: Controle total (canInvite, canManage, canDelete)
-- - ADMIN: Controle administrativo (canInvite, canManage, canDelete)
-- - MEMBER: Acesso padr√£o (sem permiss√µes especiais)
-- - VIEWER: Apenas visualiza√ß√£o (sem permiss√µes de modifica√ß√£o)
